AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  region:
    Type: String
    Default: us-east-1
  environment:
    Type: String
    Description: Environemnt for the Stack
    Default: development
  functionName:
    Type: String
    Description: Name of the lambda function
    Default: item-api

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 
                  Fn::Sub: "arn:aws:logs:${region}:${AWS::AccountId}:*"

  ItemApiLambdaFunctionUrlPublicPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ItemApiFunction
      Principal: '*'
      Action: 'lambda:InvokeFunctionUrl'
      FunctionUrlAuthType: NONE

  ItemApiFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: 
        Fn::Sub: "${functionName}-${environment}"
      Handler: index.handler
      Role:
        Fn::GetAtt: LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
              const response = {
                  statusCode: 200,
                  body: JSON.stringify('Hello from Lambda!'),
              };
              return response;
          };
      Runtime: nodejs22.x
      Timeout: 60
      MemorySize: 128
      Architectures:
        - arm64

  ItemApiUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn:
        Ref: ItemApiFunction
      AuthType: NONE

Outputs:
  ItemApiFunction:
    Description: 'ItemApiFunction Arn'
    Value:
      Fn::GetAtt: ItemApiFunction.Arn
  ItemApiUrl:
    Description: 'ItemApiUrl'
    Value:
      Fn::GetAtt: ItemApiUrl.FunctionUrl
